@using Microsoft.AspNetCore.Identity
@using Microsoft.Build.Construction
@inject UserManager<UserModel> _UserManager
@inject SignInManager<UserModel> _SignInManager

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/lib/bootstrap-icons/font/bootstrap-icons.min.css" asp-append-version="true">
    <link rel="shortcut icon" href="~/imgs/shopping-brand.png" type="image/x-icon">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <title>@ViewBag.Title - Aetherix</title>
</head>
<body>
<header class="container-fluid fixed-top">
    <div class="container-md navbar nav-social">
        <div class="nav-left d-flex text-white">
            <div class="nav-item become-seller">
                <a class="text-decoration-none text-white" href="">Trở thành người bán</a>
            </div>
            <div class="nav-item download-app">
                <a class="text-decoration-none text-white" href="">Tải ứng dụng</a>
            </div>
            <div class="social nav-item d-flex gap-2 position-relative">
                <span class="text-white">Kết nối</span>
                <a target="_blank" href="https://github.com/htilssu/ShoppingWEB">
                    <i class="bi bi-github text-white"></i>
                </a>
                <a target="_blank" href="https://www.facebook.com/htilssu.88">
                    <i class="bi bi-facebook text-white"></i>
                </a>
            </div>
        </div>
        <div class="nav-right d-flex justify-content-center align-items-center">
            <div id="notify" class="nav-item position-relative">
                <i class="bi bi-bell-fill">
                </i>
                <span>Thông báo</span>

            </div>
            <div class="nav-item">
                <i class="bi bi-question-circle"></i>
                <span>Hỗ trợ</span>
            </div>

            @if (!User.Identity.IsAuthenticated)
            {
                <div class="reg-log not-logged nav-item gap-1 d-flex">
                    <div class="reg">
                        <a href="/Register">Đăng ký</a>
                    </div>
                    <div class="log">
                        <a href="/Login">Đăng nhập</a>
                    </div>
                </div>
            }
            else
            {
                <div id="user-option" class="reg-log logged position-relative nav-item gap-1 d-flex">
                    @{
                        var user = await _UserManager.GetUserAsync(User);

                    }
                    <img class="avatar" src="@user.avtPath" alt="avt">
                    <span>@user.UserName</span>
                    <div id="option-area" class="position-absolute d-none op-hide bg-white option">
                        <ul>
                            <li>
                                <form method="post" id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                                    <button class="bg-transparent text-black nav-link p-0">Đăng xuất</button>
                                </form>
                            </li>
                        </ul>
                    </div>
                </div>
            }
        </div>

    </div>
    <div class="container-md navbar flex-nowrap with-search">
        <div class="navbar-brand">
            <a asp-controller="Home" asp-action="Index" class="h-100 text-center align-items-center d-flex align-items-center text-decoration-none">
                <img src="~/imgs/shopping-brand.svg" style="width: 40px" height="100%" class="text-center" alt="logo-brand">
                <h2 class="m-0 pt-2 text-white fw-normal">Aetherix</h2>
            </a>
        </div>
        <div class="search-category w-50">
            <form method="get" action="/Search/" class="search-form w-100 h-75 pt-2">
                <div class="h-100 bg-light d-flex align-items-center">
                    <input class="w-100 px-2 h-75 fs-6 text-black-50" name="search" placeholder="Tìm kiếm sản phẩm..." type="text">
                    <button type="submit" class="btn-search border-0">
                        <i class="bi bi-search text-white fw-bolder"></i>
                    </button>
                </div>
            </form>
            <div class="suggest-item">
                @*TODO collect data from database and render it*@
            </div>
        </div>
        <div class="d-flex gap-3">

            <div class="notify-mobile pt-2 d-none">
                <i class="bi bi-bell-fill fs-4" id="notify-toggle">
                </i>
            </div>
            <div class="cart pt-2">
                <i class="bi bi-cart-fill text-white fs-4"></i>
            </div>
            <div class="user d-none pt-2">
                @if (User.Identity.IsAuthenticated)
                {
                    /*TODO add user avatar for mobile*/
                }
                else
                {
                    <i class="bi bi-person-circle fs-4"></i>
                }
            </div>

        </div>
    </div>
    <div class="notify-mobile-area" id="mobile-area-notify">

    </div>
</header>
<div class="placeholder"></div>
@RenderBody()
<footer class=" card-footer p-md-5">
    <div class="container-md">
        <hr>
        <div class="copyright d-flex justify-content-between fs-6 text-muted flex-wrap align-items-center text-center">
            <p>&copy; @DateTime.Today.Year Aetherix. Tất cả các quyền được bảo lưu</p>
            <p>Quốc gia & Khu vực: Việt Nam</p>
        </div>
        <hr>
        <div class="info-company d-flex flex-column flex-md-wrap justify-content-center align-items-center">
            <p>Công ty TNHH Aetherix</p>
            <br>
            <p>Địa chỉ: Tầng 1-2-3-4, Tòa nhà HUFLIT, số 828 đường Sư Vạn Hạnh, Phường 12, Quận 10, Thành phố Hồ Chí Minh, Việt Nam. Tổng đài hỗ trợ: 0123456789 - Email: cskh@hotro.aetherix.vn</p>
            <p>Chịu Trách Nhiệm Quản Lý Nội Dung: Hihihi - Điện thoại liên hệ: 0123456789</p>
            <p>© 2023 - Bản quyền thuộc về Công ty TNHH Aetherix</p>
        </div>
    </div>
</footer>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

<script !src="">

    let notifyRender = document.createElement("div");
    notifyRender.className = "notify-render newrender position-absolute bg-white shadow-sm border-1 d-flex flex-column align-items-center"
    notifyRender.innerHTML = `
     @if (!User.Identity.IsAuthenticated)
     {
         <div class="notify d-flex flex-column align-items-center">
                    <div class="bg-notify w-100"></div>
                    <p class="text-black">Đăng nhập để xem thông báo</p>
                </div>
         <div class="notify-action d-flex w-100">
                    <a class="w-100 text-center" href="/Register">Đăng ký</a>
                    <a class="w-100 text-center" href="/Login">Đăng nhập</a>
        </div>
     }
     else
     {
         <div class="notify d-flex flex-column align-items-center">
         
         </div>
         /*TODO render notify of user*/
     }
     `
           
    let notify = document.getElementById('notify');
     let notifyMobileToggle = document.getElementById('notify-toggle');
     let notifyMobile = document.getElementById('mobile-area-notify');
    let timeOut =[];
    
    
    function showNotify(e) {
              clearTimeout(timeOut[0]);
              clearTimeout(timeOut[1]);
              notify.append(notifyRender);
              setTimeout(()=> {
                  notifyRender.classList.remove("newrender");
              },100)
    }
    
    function hideNotify(e) {
        
               timeOut[1] =  setTimeout(()=> {
                    notifyRender.classList.add("newrender");
                },100)
                
                 timeOut[0] = setTimeout(()=> {
                    notify.removeChild(notify.lastChild);
                },200);
           
    }
    
        var statusToggle = false;
    
    function toggleNotify(e) {
       
        
        if (!statusToggle){
            clearTimeout(timeOut[0]);
                          clearTimeout(timeOut[1]);
                    notifyMobile.append(notifyRender);
         statusToggle = true;
                    
                    setTimeout(()=> {
                        notifyRender.classList.remove("newrender");
                    },100)
        }
        else   {
             timeOut[1] =  setTimeout(()=> {
                                notifyRender.classList.add("newrender");
                            },100)
                            
                             timeOut[0] = setTimeout(()=> {
                                                            notifyMobile.removeChild(notifyMobile.lastChild);
                                                        },200);
                       statusToggle = false;
        }
    }
    
    notify.addEventListener('mouseover', showNotify);
    notify.addEventListener('mouseout', hideNotify);
    notifyMobileToggle.addEventListener('click',toggleNotify);
    
    
//     User Option
    
    const userArea = document.getElementById('user-option');
    const userOption = document.getElementById('option-area');
                                    
                               
                      
    
    function showUserOption() {
        clearTimeout(timeOut[3])
        clearTimeout(timeOut[4])
            timeOut[5] =       setTimeout(()=> {
                                                       userOption.classList.remove('d-none');
                                                   },50)
            timeOut[6] =  setTimeout(()=> {
                                               userOption.classList.remove('op-hide');
                                           },100)
    }
    userArea.addEventListener('mouseover', showUserOption)
    function hideUserOption() {
          clearTimeout(timeOut[5])
                clearTimeout(timeOut[6])
            timeOut[3] = setTimeout(()=> {
                userOption.classList.add('op-hide');
            },100)
            timeOut[4] = setTimeout(() => {
                userOption.classList.add('d-none');
            },200);
    }
    userArea.addEventListener('mouseout', hideUserOption)
</script>
</body>
</html>